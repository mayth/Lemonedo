<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:lemonedo="clr-namespace:Lemonedo"
             xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" xmlns:ee="http://schemas.microsoft.com/expression/2010/effects"
             x:Class="Lemonedo.App"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Style TargetType="{x:Type Button}">
            <Setter Property="FontFamily" Value="Segoe UI" />
            <Setter Property="FontSize" Value="11pt" />
            <Setter Property="Template" Value="{DynamicResource ButtonTemplate}" />
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
        </Style>
        <SolidColorBrush x:Key="CheckBoxStroke" Color="#8E8F8F"/>
        <Style x:Key="CheckRadioFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Color x:Key="RadioButtonPressedColor">#FF002495</Color>
        <Color x:Key="RadioButtonMouseOverColor">LightBlue</Color>
        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="#F4F4F4"/>
            <Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template" Value="{DynamicResource RadioButtonTemplate}" />
        </Style>
        <ContextMenu x:Key="NodeContextMenu">
            <MenuItem FontFamily="Segoe UI" Header="Open In New Tab" Command="{x:Static lemonedo:MainWindow.OpenNewTabCommand}" />
            <MenuItem FontFamily="Segoe UI" Header="Copy Path" Command="{x:Static lemonedo:MainWindow.CopyPathCommand}"/>
        </ContextMenu>
        <SolidColorBrush x:Key="TabCloseButtonBrush" Color="Black"/>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="HeaderTemplate" Value="{DynamicResource TabItemHeaderTemplate}" />
            <Setter Property="Template" Value="{DynamicResource TabItemHeaderControlTemplate}"/>
        </Style>
        <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type Button}">
            <ControlTemplate.Resources>
                <Storyboard x:Key="ButtonMouseOverStoryboard">
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                        <EasingColorKeyFrame KeyTime="0" Value="#FFF0F0F0" />
                        <SplineColorKeyFrame KeyTime="0:0:0.1" Value="#FF8C8C8C" />
                    </ColorAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="ButtonMouseOverReverseStoryboard">
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                        <EasingColorKeyFrame KeyTime="0" Value="#FF8C8C8C" />
                        <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FFF0F0F0" />
                    </ColorAnimationUsingKeyFrames>
                </Storyboard>
            </ControlTemplate.Resources>
            <Grid>
                <Border x:Name="border"
    							Background="#FFF0F0F0"
    							BorderThickness="2">
                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
    								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
    								RecognizesAccessKey="True"
    								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                </Trigger>
                <Trigger Property="IsDefaulted" Value="True" />
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.ExitActions>
                        <BeginStoryboard x:Name="ButtonMouseOverReverseStoryboard_BeginStoryboard" Storyboard="{StaticResource ButtonMouseOverReverseStoryboard}" />
                    </Trigger.ExitActions>
                    <Trigger.EnterActions>
                        <BeginStoryboard x:Name="ButtonMouseOverStoryboard_BeginStoryboard" Storyboard="{StaticResource ButtonMouseOverStoryboard}" />
                    </Trigger.EnterActions>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="border" Property="Background" Value="#FF393939" />
                    <Setter TargetName="border" Property="BorderBrush" Value="White" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False" />
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="RadioButtonTemplate" TargetType="{x:Type RadioButton}">
            <BulletDecorator Background="Transparent">
                <BulletDecorator.Bullet>
                    <StackPanel Orientation="Horizontal">
                        <Grid>
                            <Ellipse Stroke="White" StrokeThickness="1.5" Height="10" Width="10" x:Name="Border" Fill="Transparent"/>
                            <Ellipse Fill="White" Height="4" Width="4" x:Name="CheckedMark" Stroke="White"/>
                        </Grid>
                    </StackPanel>
                </BulletDecorator.Bullet>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition GeneratedDuration="0" To="Disabled">
                                <Storyboard>
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
                                        <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                        <EasingColorKeyFrame KeyTime="0:0:0.2" Value="Gray"/>
                                    </ColorAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckedMark">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.5"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualTransition>
                            <VisualTransition From="Disabled" GeneratedDuration="0" To="Normal">
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckedMark"/>
                                    <ColorAnimation Duration="0:0:0.2" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="Border" From="Gray"/>
                                </Storyboard>
                            </VisualTransition>
                            <VisualTransition GeneratedDuration="0:0:0.2" To="MouseOver">
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:0.2" To="{StaticResource RadioButtonMouseOverColor}" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Border"/>
                                </Storyboard>
                            </VisualTransition>
                            <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.2" To="Normal">
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:0.2" To="Transparent" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Border" From="{StaticResource RadioButtonMouseOverColor}"/>
                                </Storyboard>
                            </VisualTransition>
                            <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Pressed">
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:0.1" To="{StaticResource RadioButtonPressedColor}" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Border"/>
                                </Storyboard>
                            </VisualTransition>
                            <VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="MouseOver">
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:0.1" From="{StaticResource RadioButtonPressedColor}" To="{StaticResource RadioButtonMouseOverColor}" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Border"/>
                                </Storyboard>
                            </VisualTransition>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
                                    <EasingColorKeyFrame KeyTime="0:0:0.2" Value="LightBlue"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
                                    <EasingColorKeyFrame KeyTime="0" Value="{StaticResource RadioButtonPressedColor}"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckedMark">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.09"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="Gray"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedMark">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedMark">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Indeterminate"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <VisualStateManager.CustomVisualStateManager>
                    <ei:ExtendedVisualStateManager/>
                </VisualStateManager.CustomVisualStateManager>
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </BulletDecorator>
            <ControlTemplate.Triggers>
                <Trigger Property="HasContent" Value="true">
                    <Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
                    <Setter Property="Padding" Value="4,0,0,0"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        
        <DataTemplate x:Key="TabItemHeaderTemplate" DataType="TabItem">
            <DockPanel>
                <Button Width="16" DockPanel.Dock="Right" VerticalAlignment="Center" Command="{x:Static lemonedo:MainWindow.CloseTabCommand}">
                    <Grid Width="10" HorizontalAlignment="Center" Margin="0">
                        <Rectangle Width="2" Height="8" StrokeThickness="0" Fill="{DynamicResource TabCloseButtonBrush}" RenderTransformOrigin="0.5,0.5">
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform AngleX="45"/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                        <Rectangle Width="2" Height="8" StrokeThickness="0" Fill="{DynamicResource TabCloseButtonBrush}" RenderTransformOrigin="0.5,0.5">
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform AngleX="-45"/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                    </Grid>
                </Button>
                <TextBlock Name="HeaderText" Text="{Binding}" FontFamily="Segoe UI" />
            </DockPanel>
        </DataTemplate>
        <ControlTemplate x:Key="TabItemHeaderControlTemplate" TargetType="{x:Type TabItem}">
            <Grid SnapsToDevicePixels="True">
                <Border x:Name="Bd" BorderBrush="Transparent" BorderThickness="1,1,1,0" Background="#FFF0F0F0" Padding="{TemplateBinding Padding}" Margin="2,0,2,4">
                    <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="Bd" Value="#FF87CEEB" />
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Panel.ZIndex" Value="1"/>
                    <Setter Property="Background" TargetName="Bd" Value="White"/>
                    <Setter Property="BorderBrush" TargetName="Bd" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush}" />
                    <Setter Property="Margin" TargetName="Bd" Value="2,0,2,0" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="False"/>
                        <Condition Property="IsMouseOver" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="BorderBrush" TargetName="Bd" Value="Transparent"/>
                </MultiTrigger>
                <Trigger Property="TabStripPlacement" Value="Bottom">
                    <Setter Property="BorderThickness" TargetName="Bd" Value="1,0,1,1"/>
                </Trigger>
                <Trigger Property="TabStripPlacement" Value="Left">
                    <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,0,1"/>
                </Trigger>
                <Trigger Property="TabStripPlacement" Value="Right">
                    <Setter Property="BorderThickness" TargetName="Bd" Value="0,1,1,1"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True"/>
                        <Condition Property="TabStripPlacement" Value="Top"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Margin" Value="-2,-2,-2,-1"/>
                    <Setter Property="Margin" TargetName="Content" Value="0,0,0,1"/>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True"/>
                        <Condition Property="TabStripPlacement" Value="Bottom"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Margin" Value="-2,-1,-2,-2"/>
                    <Setter Property="Margin" TargetName="Content" Value="0,1,0,0"/>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True"/>
                        <Condition Property="TabStripPlacement" Value="Left"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Margin" Value="-2,-2,-1,-2"/>
                    <Setter Property="Margin" TargetName="Content" Value="0,0,1,0"/>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True"/>
                        <Condition Property="TabStripPlacement" Value="Right"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Margin" Value="-1,-2,-2,-2"/>
                    <Setter Property="Margin" TargetName="Content" Value="1,0,0,0"/>
                </MultiTrigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="Bd" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="Bd" Value="#FFC9C7BA"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="TabControlNormalBorderBrush" Color="#8C8E94"/>
    </Application.Resources>
</Application>
