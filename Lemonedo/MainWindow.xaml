<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
        xmlns:lemonedo="clr-namespace:Lemonedo"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" xmlns:ee="http://schemas.microsoft.com/expression/2010/effects" x:Name="window" x:Class="Lemonedo.MainWindow"
        Title="msgpack edit"
        Width="1000"
        Height="600"
        MinWidth="800"
        MinHeight="100">
    <Window.Resources>
        <lemonedo:NodeTreeConverter x:Key="NodeTreeConverter" />
        <lemonedo:EnumBooleanConverter x:Key="EnumBooleanConverter" />
        <HierarchicalDataTemplate x:Key="nodeTreeViewTemplate" DataType="{x:Type lemonedo:TreeNode}" ItemsSource="{Binding Children}">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Name}"/>
            </StackPanel>
            <HierarchicalDataTemplate.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                    <TextBlock Text="{Binding Name}"/>
                </HierarchicalDataTemplate>
            </HierarchicalDataTemplate.ItemTemplate>
        </HierarchicalDataTemplate>
        <Style x:Key="SelectExpandBindingStyle" TargetType="TreeViewItem">
            <EventSetter Event="TreeViewItem.MouseRightButtonDown" Handler="TreeViewItem_MouseRightButtonDown" />
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
        </Style>
        <Storyboard x:Key="searchCloseStoryboard">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="searchGrid">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="searchGrid">
                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="-200,0,0,0">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="searchOpenStoryboard">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="searchGrid">
                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="searchGrid">
                <EasingThicknessKeyFrame KeyTime="0:0:0.4" Value="0">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
            </ThicknessAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="searchPanel">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="searchPanel">
                <EasingThicknessKeyFrame KeyTime="0:0:0.1" Value="-20,20,20,20"/>
                <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="0,20"/>
            </ThicknessAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="textBlock">
                <EasingThicknessKeyFrame KeyTime="0:0:0.1" Value="-20,0,0,0"/>
                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="0"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="messageDialogShowStoryboard">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="messageDialogPanel">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="messageDialogPanel">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid">
            	<DiscreteObjectKeyFrame KeyTime="0">
            		<DiscreteObjectKeyFrame.Value>
            			<Visibility>Visible</Visibility>
            		</DiscreteObjectKeyFrame.Value>
            	</DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
            	<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="messageDialogHideStoryboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="messageDialogPanel">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="messageDialogPanel">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid">
            	<DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
            	<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard Storyboard="{StaticResource messageDialogShowStoryboard}"/>
            <BeginStoryboard Storyboard="{StaticResource messageDialogHideStoryboard}"/>
        </EventTrigger>
    </Window.Triggers>
    <Window.CommandBindings>
        <CommandBinding CanExecute="ExitCommand_CanExecute"
            Command="{x:Static lemonedo:MainWindow.ExitCommand}"
            Executed="ExitCommand_Executed" />
        <CommandBinding CanExecute="NewCommand_CanExecute"
            Command="New"
            Executed="NewCommand_Executed" />
        <CommandBinding CanExecute="SaveCommand_CanExecute"
            Command="Save"
            Executed="SaveCommand_Executed" />
        <CommandBinding CanExecute="SaveAsCommand_CanExecute"
            Command="SaveAs"
            Executed="SaveAsCommand_Executed" />
        <CommandBinding CanExecute="SearchCommand_CanExecute"
            Executed="SearchCommand_Executed"
            Command="Search" />
        <CommandBinding CanExecute="OpenCommand_CanExecute"
            Command="Open"
            Executed="OpenCommand_Executed" />
        <CommandBinding Command="{x:Static lemonedo:MainWindow.SearchNextCommand}" CanExecute="SearchNextCommand_CanExecute" Executed="SearchNextCommand_Executed" />
        <CommandBinding Command="{x:Static lemonedo:MainWindow.CancelCommand}" CanExecute="CancelCommand_CanExecute" Executed="CancelCommand_Executed" />
        <CommandBinding Command="{x:Static lemonedo:MainWindow.CopyPathCommand}" CanExecute="CopyPathCommand_CanExecute" Executed="CopyPathCommand_Executed" />
        <CommandBinding Command="{x:Static lemonedo:MainWindow.OpenNewTabCommand}" CanExecute="OpenNewTabCommand_CanExecute" Executed="OpenNewTabCommand_Executed" />
        <CommandBinding Command="{x:Static lemonedo:MainWindow.CloseTabCommand}" CanExecute="CloseTabCommand_CanExecute" Executed="CloseTabCommand_Executed" />
        <CommandBinding Command="{x:Static lemonedo:MainWindow.AddChildCommand}" CanExecute="AddChildCommand_CanExecute" Executed="AddChildCommand_Executed" />
        <CommandBinding Command="{x:Static lemonedo:MainWindow.AddBeforeCommand}" CanExecute="AddBeforeCommand_CanExecute" Executed="AddBeforeCommand_Executed" />
        <CommandBinding Command="{x:Static lemonedo:MainWindow.AddAfterCommand}" CanExecute="AddAfterCommand_CanExecute" Executed="AddAfterCommand_Executed" />
        <CommandBinding Command="{x:Static lemonedo:MainWindow.RenameCommand}" CanExecute="RenameCommand_CanExecute" Executed="RenameCommand_Executed" />
        <CommandBinding Command="{x:Static lemonedo:MainWindow.DeleteNodeCommand}" CanExecute="DeleteNodeCommand_CanExecute" Executed="DeleteNodeCommand_Executed" />
    </Window.CommandBindings>
    <Window.InputBindings>
        <KeyBinding Command="SaveAs" Gesture="Ctrl+Shift+S"/>
        <KeyBinding Command="Search" Gesture="Ctrl+F"/>
        <KeyBinding Command="{x:Static lemonedo:MainWindow.SearchNextCommand}" Gesture="F3"/>
        <KeyBinding Command="{x:Static lemonedo:MainWindow.CancelCommand}" Gesture="Esc" />
        <KeyBinding Command="{x:Static lemonedo:MainWindow.CloseTabCommand}" Gesture="Ctrl+W" />
    </Window.InputBindings>
    <Grid>
        <Grid Name="messageDialogPanel" Panel.ZIndex="20" Width="{Binding ElementName=window, Path=ActualWidth}" Height="{Binding ElementName=window, Path=ActualHeight}" Background="#bbffffff" Visibility="Hidden">
            <Grid x:Name="grid" Height="220" Background="#ff393939" Visibility="Hidden">
                <DockPanel Name="messageDialogContentContainer" Margin="100,20,100,10">
                    <UniformGrid Name="messageDialogButtons" DockPanel.Dock="Bottom" Margin="350,0,100,0" />
                    <Grid Name="messageDialogMainContent" />
                </DockPanel>
            </Grid>
        </Grid>
        <Grid Name="searchGrid" HorizontalAlignment="Left" Background="#FF393939" Panel.ZIndex="10" Width="200" Visibility="Collapsed" Margin="-200,0,0,0">
            <Button Name="searchCloseButton" Width="30" Height="30" HorizontalAlignment="Left" VerticalAlignment="Top" Background="{Binding Background, ElementName=searchGrid}" Command="{x:Static lemonedo:MainWindow.CancelCommand}">
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Rectangle Fill="{TemplateBinding Background}" />
                            <ed:Arc ArcThickness="50" EndAngle="360" HorizontalAlignment="Left" Height="30" Stretch="None" Stroke="LightGray" StartAngle="0" VerticalAlignment="Top" Width="30" Margin="-5,-5,0,0" StrokeThickness="2"/>
                            <Line HorizontalAlignment="Left" VerticalAlignment="Top" Margin="2.5,9,0,0" StrokeThickness="2" Stroke="LightGray" X2="15" Y1="1" Y2="1" X1="2" />
                            <Rectangle HorizontalAlignment="Left" Height="7" Margin="5.983,2.969,0,0" Stroke="LightGray" StrokeThickness="2" VerticalAlignment="Top" Width="2.001" RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform AngleX="-45"/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                            <Rectangle HorizontalAlignment="Left" Height="7" Margin="2.482,9.932,0,0" Stroke="LightGray" StrokeThickness="2" VerticalAlignment="Top" Width="2">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform AngleX="45"/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                    </ControlTemplate>
                </Button.Template>
            </Button>
            <DockPanel x:Name="searchPanel" Margin="0,20,0,20">
                <TextBlock x:Name="textBlock" DockPanel.Dock="Top" FontFamily="Segoe UI" FontWeight="Light" FontSize="24" Foreground="White"><Run Text="Search"/></TextBlock>
                <Button DockPanel.Dock="Bottom" Content="Search" Margin="30,0" Command="{x:Static lemonedo:MainWindow.SearchNextCommand}" />
                <StackPanel>
                    <StackPanel>
                        <TextBlock FontFamily="Segoe UI" FontWeight="Light" FontSize="18" Foreground="White"><Run Text="Value"/></TextBlock>
                        <TextBox Name="searchKeyBox" Margin="10,0" FontFamily="Segoe UI" Text="keyword"/>
                    </StackPanel>
                    <GroupBox Header="Target" FontFamily="Segoe UI Light" Foreground="White" BorderBrush="White" FontSize="16" Margin="10">
                        <StackPanel>
                            <RadioButton x:Name="searchBinaryRadio" Foreground="White" Content="Binary" IsChecked="{Binding Path=SearchTarget, Mode=TwoWay, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=Binary}" GroupName="searchTarget" />
                            <RadioButton x:Name="searchNodeRadio" Foreground="White" Content="Node" IsChecked="{Binding Path=SearchTarget, Mode=TwoWay, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=Node}" GroupName="searchTarget" />
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Search As" FontFamily="Segoe UI Light" Foreground="White" BorderBrush="White" FontSize="16" Margin="10" IsEnabled="{Binding IsChecked, ElementName=searchBinaryRadio}">
                        <StackPanel>
                            <RadioButton x:Name="searchAsStringRadio" Foreground="White" Content="String" IsChecked="{Binding Path=SearchAs, Mode=TwoWay, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=String}" GroupName="searchAs" />
                            <RadioButton x:Name="searchAsBinaryRadio" Foreground="White" Content="Binary" IsChecked="{Binding Path=SearchAs, Mode=TwoWay, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=Binary}" GroupName="searchAs" />
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Base" IsEnabled="{Binding IsChecked, ElementName=searchAsBinaryRadio}" FontFamily="Segoe UI Light" FontSize="16" BorderBrush="White" Foreground="White" Margin="10">
                        <StackPanel>
                            <RadioButton x:Name="hexBaseRadio" Foreground="White" Content="Hexadecimal" IsChecked="{Binding Path=SearchBase, Mode=TwoWay, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=Hexadecimal}" GroupName="searchBase" />
                            <RadioButton x:Name="decBaseRadio" Foreground="White" Content="Decimal" IsChecked="{Binding Path=SearchBase, Mode=TwoWay, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=Decimal}" GroupName="searchBase" />
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Search Type" FontFamily="Segoe UI Light" FontSize="16" BorderBrush="White" Foreground="White" Margin="10" IsEnabled="{Binding IsChecked, ElementName=searchNodeRadio, Mode=OneWay}">
                        <StackPanel>
                            <RadioButton Foreground="White" IsChecked="{Binding Path=SearchType, Mode=TwoWay, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=Exact}" GroupName="searchType">Exact Match</RadioButton>
                            <RadioButton Foreground="White" IsChecked="{Binding Path=SearchType, Mode=TwoWay, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=Partial}" GroupName="searchType">Partial Match</RadioButton>
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </DockPanel>
        </Grid>
        <DockPanel Margin="7.5" Name="mainPanel">
            <UniformGrid x:Name="navigationPanel"
                Columns="5"
                DockPanel.Dock="Top">
                <Button Margin="20,10"
                    Command="New"
                    Content="New" />
                <Button Margin="20,10"
                    Command="Open"
                    Content="Open" />
                <Button Margin="20,10" Command="Save" Content="Save">
                    <Button.ContextMenu>
                        <ContextMenu>
                            <MenuItem Command="ApplicationCommands.Save" Header="Save" />
                            <MenuItem Command="ApplicationCommands.SaveAs" Header="Save As" />
                        </ContextMenu>
                    </Button.ContextMenu>
                </Button>
                <Button x:Name="searchButton" Margin="20,10" Content="Search" Command="Search" />
                <Button Margin="20,10"
                    Command="{x:Static lemonedo:MainWindow.ExitCommand}"
                    Content="Exit" />
            </UniformGrid>
            <TextBlock Name="pathText" DockPanel.Dock="Bottom" Text="Path\To\Node" FontFamily="Segoe UI" FontSize="14" Background="LightGray" TextTrimming="CharacterEllipsis" ToolTip="{Binding Text, ElementName=pathText}">
                <TextBlock.ContextMenu>
                    <ContextMenu>
                        <MenuItem FontFamily="Segoe UI" Header="Copy Path" Command="{x:Static lemonedo:MainWindow.CopyPathCommand}"/>
                    </ContextMenu>
                </TextBlock.ContextMenu>
            </TextBlock>
            <DockPanel>
                <UniformGrid Name="operationPanel" DockPanel.Dock="Bottom" Columns="5" Height="50px">
                    <Button Command="{x:Static lemonedo:MainWindow.AddChildCommand}">Add Child</Button>
                    <Button Command="{x:Static lemonedo:MainWindow.AddBeforeCommand}">Insert Before</Button>
                    <Button Command="{x:Static lemonedo:MainWindow.AddAfterCommand}">Insert After</Button>
                    <Button Command="{x:Static lemonedo:MainWindow.RenameCommand}">Rename</Button>
                    <Button Command="{x:Static lemonedo:MainWindow.DeleteNodeCommand}">Delete</Button>
                </UniformGrid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="9*" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="23*" />
                    </Grid.ColumnDefinitions>
                    <TreeView x:Name="nodeList" SelectedItemChanged="nodeList_SelectedItemChanged">
                        <TreeViewItem ItemsSource="{Binding Children}" ItemTemplate="{StaticResource nodeTreeViewTemplate}" Header="{Binding Name}"
                                  ItemContainerStyle="{StaticResource SelectExpandBindingStyle}" Style="{StaticResource SelectExpandBindingStyle}"/>
                    </TreeView>
                    <GridSplitter Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Stretch" Width="5" Background="White" />
                    <TabControl x:Name="editViewTab" Grid.Column="2" SelectionChanged="editViewTab_SelectionChanged" Background="White" BorderBrush="Black" />
                    <Grid x:Name="editBoxHiding" Grid.Column="2" Background="{Binding Background, ElementName=window}">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"><Run Text="Unavailable"/></TextBlock>
                    </Grid>
                </Grid>
            </DockPanel>
        </DockPanel>
    </Grid>
</Window>
